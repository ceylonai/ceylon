namespace ceylon {
  string version();
  void enable_log(string level);

  void cprint(string message);
};

dictionary AgentDetail{
    string name;
    string id;
    string role;
};

// Handle Agents behaviours
[Trait,WithForeign]
interface MessageHandler {
    [Async]
    void on_message(string agent_id, bytes data, u64 time);
};

[Trait,WithForeign]
interface Processor {
    [Async]
    void run(bytes inputs);
};

[Trait,WithForeign]
interface EventHandler {
    [Async]
    void on_agent_connected(string topic,AgentDetail agent);
};

enum PeerMode{
    "Admin",
    "Client"
};

dictionary UnifiedAgentConfig {
    string name;
    PeerMode mode;
    string? role;
    string? work_space_id;
    u16? port;
    string? admin_peer;
    string? admin_ip;
    u16? buffer_size;
};

interface UnifiedAgent{
    constructor(UnifiedAgentConfig? config,string? config_path,MessageHandler on_message, Processor processor, EventHandler on_event);
    
    [Async]
    void start(bytes inputs, sequence<UnifiedAgent>? workers);

    [Async]
    void stop();

    [Async]
    void broadcast(bytes message);

    [Async]
    void send_direct(string to_peer, bytes message);

    AgentDetail details();

    [Async]
    sequence<AgentDetail> get_connected_agents();

};
