namespace ceylon {
  string version();
  void enable_log(string level);

  void cprint(string message);
};

dictionary WorkSpaceConfig{
    string name;
    u16 port = 8888;
};

interface WorkSpace{
    constructor(WorkSpaceConfig config);

    [Async]
    void run(bytes inputs);
};

dictionary AdminAgentConfig {
    string name;
    u16 port;
};

dictionary AgentDetail{
    string name;
    string id;
};


interface AdminAgent{
    constructor(AdminAgentConfig config,MessageHandler on_message, Processor processor, EventHandler on_event);
    [Async]
    void start(bytes inputs, sequence<WorkerAgent> workers);

    [Async]
    void stop();


    [Async]
    void broadcast(bytes message);

    AgentDetail details();
};

dictionary WorkerAgentConfig {
    string name;
    string work_space_id;
    string admin_peer;
    u16 admin_port;
};
interface WorkerAgent{
    constructor(WorkerAgentConfig config,MessageHandler on_message, Processor processor);
    [Async]
    void start(bytes inputs);

    [Async]
    void stop();

    [Async]
    void broadcast(bytes message);

    AgentDetail details();

};

// Handle Agents behaviours
[Trait,WithForeign]
interface MessageHandler {
    [Async]
    void on_message(string agent_id, bytes data, u64 time);
};

[Trait,WithForeign]
interface Processor {
    [Async]
    void run(bytes inputs);
};

[Trait,WithForeign]
interface EventHandler {
    [Async]
    void on_agent_connected(string topic,string agent_id);
};