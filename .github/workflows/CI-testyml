name: Ceylon Release CI

on:
  push:
    branches:
      - release
    tags:
      - v*

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
        target: [ x86_64, i686, aarch64, armv7, s390x, ppc64le ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install uniffi-bindgen maturin
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}-unknown-linux-gnu
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Debug - List directory contents
        run: ls -R
      - name: Debug - Print Rust version and target info
        run: |
          rustc --version
          rustc --print target-list
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}-unknown-linux-gnu
          args: --release --out dist --find-interpreter
          manylinux: auto
          working-directory: ./bindings/ceylon
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc
      - name: Debug - List built wheels
        run: ls -R ./bindings/ceylon/dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}-py${{ matrix.python-version }}
          path: bindings/ceylon/dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Install dependencies
        run: pip install uniffi-bindgen maturin
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: ./bindings/ceylon
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}-py${{ matrix.python-version }}
          path: bindings/ceylon/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install uniffi-bindgen maturin
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: ./bindings/ceylon
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}-py${{ matrix.python-version }}
          path: bindings/ceylon/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, windows, macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./dist
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing ./dist/**/*.whl