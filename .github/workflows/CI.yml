# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
      - devops
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
 linux:
   runs-on: ${{ matrix.platform.runner }}
   strategy:
     matrix:
       platform:
         - runner: ubuntu-latest
           target: x86_64
         - runner: ubuntu-latest
           target: x86
#          - runner: ubuntu-latest
#            target: aarch64
#          - runner: ubuntu-latest
#            target: armv7
#         - runner: ubuntu-latest
#           target: s390x
#         - runner: ubuntu-latest
#           target: ppc64le
   steps:
     - uses: actions/checkout@v4
     - uses: actions/setup-python@v5
       with:
         python-version: '3.10'
     - name: Install OpenSSL
       run: apt-get install pkg-config libssl-dev
     - name: Install Libs
       run: pip install uniffi-bindgen
     - name: Change Directory
       run: cd bindings/ceylon
     - name: Build wheels
       uses: PyO3/maturin-action@v1
       with:
         target: ${{ matrix.platform.target }}
         args: --release --out dist --find-interpreter -m bindings/ceylon/Cargo.toml
         sccache: 'true'
         manylinux: auto
     - name: Upload wheels
       uses: actions/upload-artifact@v4
       with:
         name: wheels-linux-${{ matrix.platform.target }}
         path: bindings/ceylon/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.platform.target }}
      - name: Install Libs
        run: pip install uniffi-bindgen
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter -m bindings/ceylon/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: bindings/ceylon/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Libs
        run: pip install uniffi-bindgen
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter -m bindings/ceylon/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: bindings/ceylon/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist -m bindings/ceylon/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: bindings/ceylon/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Change Directory
        run: cd bindings/ceylon
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
