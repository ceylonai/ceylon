name: Ceylon-Build-Release-PyPi

on:
  push:
    branches:
      - main
      - master
      - devops
      - master-update-release
    tags:
      - '*'

permissions:
  contents: read

jobs:
  linux:
#    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-20.04
            target: x86_64
          - runner: ubuntu-20.04
            target: x86
          - runner: ubuntu-20.04
            target: aarch64
          - runner: ubuntu-20.04
            target: armv7
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Libs
        run: |
          pip install uniffi-bindgen 
          pip install maturin
      - name: Build
        run: |
          cd bindings/ceylon
          maturin build --release --out dist --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}-py${{ matrix.python-version }}
          path: bindings/ceylon/dist

  windows:
#    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.platform.target }}
      - name: Install Libs
        run: pip install uniffi-bindgen
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          working-directory: ./bindings/ceylon
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}-py${{ matrix.python-version }}
          path: bindings/ceylon/dist

  macos:
#    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Libs
        run: pip install uniffi-bindgen
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          working-directory: ./bindings/ceylon
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}-py${{ matrix.python-version }}
          path: bindings/ceylon/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: ./bindings/ceylon
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: bindings/ceylon/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux, windows, sdist, macos ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Display structure of downloaded files
        run: ls -R dist
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*/*.whl dist/*/*.tar.gz